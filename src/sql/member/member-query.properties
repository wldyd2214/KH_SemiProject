loginCheck=SELECT * FROM MEMBER WHERE USER_EMAIL=? AND USER_PWD=?
insertMember=INSERT INTO MEMBER VALUES(USER_NUMBER.NEXTVAL,?,?,?,?,?,?,?,?,SYSDATE,DEFAULT,NULL,?,?,'NURI',NULL,'N','Y',NULL)
deleteMember=UPDATE MEMBER SET ACTIVATED='N' WHERE USER_EMAIL=? AND USER_PWD=?
updateMember=UPDATE MEMBER SET USER_PWD = ?, NICKNAME=?, ADDRESS=?, PHONE=?, HOBBY=? WHERE USER_EMAIL=? AND USER_NUMBER=?
updateMemberNoPwd=UPDATE MEMBER SET NICKNAME=?, ADDRESS=?, PHONE=?, HOBBY=? WHERE USER_EMAIL=? AND USER_NUMBER=?
selectAll=SELECT * FROM MEMBER WHERE USER_EMAIL <> 'admin'
searchId=SELECT * FROM MEMBER WHERE USER_EMAIL LIKE '%'||?||'%'
searchName=SELECT * FROM MEMBER WHERE USER_NAME LIKE '%'||?||'%'
searchNickName=SELECT * FROM MEMBER WHERE NICKNAME LIKE '%'||?||'%'
idCheck=SELECT * FROM MEMBER WHERE USER_EMAIL=?
checkMember=SELECT * FROM MEMBER 
insertMember2=INSERT INTO MEMBER VALUES(USER_NUMBER.NEXTVAL,?,NULL,NULL,?,NULL,NULL,NULL,NULL,SYSDATE,DEFAULT,NULL,NULL,NULL,'KAKAO',NULL,'N','Y',NULL)
loginMember=SELECT * FROM MEMBER WHERE USER_EMAIL = ? AND ACCOUNT_SORT='KAKAO'
findId=SELECT * FROM MEMBER WHERE USER_NAME=? AND PHONE=?
passwordUpdate=UPDATE MEMBER SET USER_PWD = ? WHERE USER_EMAIL=?
selectNuriBossInfo=SELECT USER_NUMBER, USER_NAME, PHONE, BANK_NAME, BANK_NUMBER FROM MEMBER WHERE USER_NUMBER=?
goneMemberListCount=SELECT COUNT(*) FROM MEMBER WHERE ACTIVATED=?
selectGoneMemberList=SELECT RNUM, USER_NUMBER, USER_EMAIL, USER_NAME, NICKNAME, ADDRESS, PHONE, ENROLL_DATE, ACTIVATED_DATE FROM(SELECT ROWNUM RNUM, USER_NUMBER, USER_EMAIL, USER_NAME, NICKNAME, ADDRESS, PHONE, ENROLL_DATE, ACTIVATED_DATE FROM MEMBER WHERE ACTIVATED ='N') WHERE RNUM BETWEEN ? AND ?

getRefundMemberCount=SELECT COUNT(*) FROM PAYDETAIL WHERE REFUND_STATE='Y' AND REFUND_NUMBER IS NULL
selectRefundMember=SELECT RNUM, USER_NUMBER, USER_EMAIL, USER_NAME, NURI_NAME, NICKNAME, PHONE, GRADE, BANK_NAME, BANK_NUMBER, PRICE FROM(SELECT ROWNUM RNUM, USER_NUMBER, USER_EMAIL, USER_NAME, NURI_NAME, NICKNAME, PHONE, GRADE, BANK_NAME, BANK_NUMBER, PRICE FROM(SELECT M.USER_NUMBER, M.USER_EMAIL, M.USER_NAME, N.NURI_NAME, M.NICKNAME, M.PHONE, M.GRADE, M.BANK_NAME, M.BANK_NUMBER, N.PRICE FROM MEMBER M JOIN PAYMENT P ON(M.USER_NUMBER=P.USER_NUMBER) JOIN PAYDETAIL D ON(P.PAYMENT_ID=D.PAYMENT_ID) JOIN NEWNURI N ON(N.NURI_NUMBER=P.NURI_NUMBER) WHERE D.REFUND_STATE = 'Y' AND D.REFUND_NUMBER IS NULL)) WHERE RNUM BETWEEN ? AND ?
updateRefundNumber=UPDATE PAYDETAIL SET REFUND_NUMBER=(SELECT PAYMENT_ID FROM PAYMENT WHERE USER_NUMBER=?), REFUND_DATE=DEFAULT WHERE PAYMENT_ID = (SELECT D.PAYMENT_ID FROM PAYDETAIL D JOIN PAYMENT P ON(D.PAYMENT_ID=P.PAYMENT_ID) WHERE P.USER_NUMBER=?)
getRefundMemberCount2=SELECT COUNT(*) FROM PAYDETAIL WHERE REFUND_STATE='Y' AND REFUND_NUMBER IS NOT NULL
selectRefundMember2=SELECT RNUM, REFUND_DATE, USER_NUMBER, USER_EMAIL, USER_NAME, NURI_NAME, NICKNAME, PHONE, GRADE, BANK_NAME, BANK_NUMBER, PRICE FROM(SELECT ROWNUM RNUM, REFUND_DATE, USER_NUMBER, USER_EMAIL, USER_NAME, NURI_NAME, NICKNAME, PHONE, GRADE, BANK_NAME, BANK_NUMBER, PRICE FROM(SELECT D.REFUND_DATE, M.USER_NUMBER, M.USER_EMAIL, M.USER_NAME, N.NURI_NAME, M.NICKNAME, M.PHONE, M.GRADE, M.BANK_NAME, M.BANK_NUMBER, N.PRICE FROM MEMBER M JOIN PAYMENT P ON(M.USER_NUMBER=P.USER_NUMBER) JOIN PAYDETAIL D ON(P.PAYMENT_ID=D.PAYMENT_ID) JOIN NEWNURI N ON(N.NURI_NUMBER=P.NURI_NUMBER) WHERE D.REFUND_STATE = 'Y' AND D.REFUND_NUMBER IS NOT NULL)) WHERE RNUM BETWEEN ? AND ?

//LEEJINHEE
insertMember3=INSERT INTO MEMBER VALUES(USER_NUMBER.NEXTVAL,?,NULL,?,?,NULL,NULL,NULL,NULL,SYSDATE,DEFAULT,NULL,NULL,NULL,'NAVER',NULL,'N','Y',NULL)
loginMember1=SELECT * FROM MEMBER WHERE USER_EMAIL = ? AND ACCOUNT_SORT='NAVER'